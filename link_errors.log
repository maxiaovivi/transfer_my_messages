***********************************************************************************/
void CNavigationAstarScheduler::updateOvercurrent(CRobotTask *task)
{
    std::deque<base::CRobotPose2D> overcurrent_obstacle = task->getCurrentOverObstacles();

    if (!overcurrent_obstacle.empty())
    {
        if(!comparePoseDequeEqual(m_last_overcurrent_obstacle, overcurrent_obstacle))
        {

            m_overcurrent_pose_deque.insert(m_overcurrent_pose_deque.end(), overcurrent_obstacle.begin() + m_last_overcurrent_obstacle.size(), overcurrent_obstacle.end());
            while(m_overcurrent_pose_deque.size() > OBSTACLE_DEQUE_SIZE){
                m_overcurrent_pose_deque.pop_front();
            }   

            m_level2_overcurrent_pose_deque.insert(m_level2_overcurrent_pose_deque.end(), overcurrent_obstacle.begin() + m_last_overcurrent_obstacle.size(), overcurrent_obstacle.end());
            while(m_level2_overcurrent_pose_deque.size() > OBSTACLE_DEQUE_SIZE){
                m_level2_overcurrent_pose_deque.pop_front();
            }      

            m_last_overcurrent_obstacle = overcurrent_obstacle;
            m_obstacle_change_flag = true;
        }
    }
}