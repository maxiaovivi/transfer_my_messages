/***********************************************************************************
Function:     judgeLongAisle
Description:  judgeLongAisle
Input:        None
Output:       None
Return:       None
Others:       None
***********************************************************************************/
bool CCartographerSlam::judgeLongAisle(everest::obs::CObservationLidar lidar)
{
    CRobotPose2D robot_pose = m_carto_real_time_pose;

    std::vector<CLineSegment>   line_segment;
    CLineSegmentExtraction      line_segment_extraction;

    CRobotPose2D pose = robot_pose + CRobotPose2D(0.0, 0.0, M_PI);
    CRobotPose2D trans_pose = pose + CRobotPose2D(LIDAR_SENSOR_POSE, 0.0, 0.0);
    line_segment_extraction.extractLongLineSegment(lidar.getLidarScan(), trans_pose, line_segment);

    if(line_segment.size() <= 1)
    {
        return false;
    }

    for(int i = 0; i < line_segment.size(); i++)
    {
        CLineSegment line = line_segment.at(i);
        for(int j = 1; j < line_segment.size(); j++)
        {
            if(!line.isParallel(line_segment.at(j), 0.3))
            {
                return false;
            }
        }
    }

    for(int i = 0; i < line_segment.size(); i++)
    {
        CLineSegment line = line_segment.at(i);
        for(int j = 1; j < line_segment.size(); j++)
        {
            CRobotPose2D pose = line_segment.at(j).getStartPose();
            if(line.getAbsDistanceFromPoint(pose) > 0.5)
            {
                return true;
            }
        }
    }

    return false;
}